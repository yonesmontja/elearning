{"version":3,"sources":["../src/core.js"],"names":["define","$","mConfig","mString","Y","mEvent","session","courseModuleId","activityId","sessionId","attemptId","sessionKey","cache","Ajax","method","url","data","success","id","sessionid","attemptid","sesskey","ajax","type","dataType","error","fail","setText","Quiz","info","action","request","Question","quiz","isRunning","isSaving","endTime","isVoteRunning","hasVotes","countdownTimeLeft","questionTime","countdownInterval","timerInterval","get","is_already_submitted","show","box","html","eval","js","css","forEach","cssUrl","head","document","getElementsByTagName","style","createElement","rel","href","appendChild","role","onQuestionRefreshed","renderAllMathjax","hide","timer","clearInterval","startAttempt","parseInt","setInterval","onCountdownTick","onTimerEnding","currentTime","Date","getTime","hideTimer","timeLeft","onTimerTick","refresh","Role","state","isNewState","question","events","notrunning","preparing","running","reviewing","sessionclosed","voting","onStateChange","event","ms","changeQuizState","status","setTimeout","poll","$element","addClass","removeClass","children","notifyFilterContentUpdated","getElementsByClassName","$target","latex","input","targetId","target","getElementById","addMathjaxElement","encodeURIComponent","original","key","from","args","when","get_string","done","text","initialize"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @package   mod_jazzquiz\n * @author    Sebastian S. Gundersen <sebastsg@stud.ntnu.no>\n * @copyright 2014 University of Wisconsin - Madison\n * @copyright 2018 NTNU\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/config', 'core/str', 'core/yui', 'core/event'], function ($, mConfig, mString, Y, mEvent) {\n\n    // Contains the needed values for using the ajax script.\n    let session = {\n        courseModuleId: 0,\n        activityId: 0, // TODO: Remove activityId? Unsure if used.\n        sessionId: 0,\n        attemptId: 0,\n        sessionKey: ''\n    };\n\n    // Used for caching the latex of maxima input.\n    let cache = [];\n\n    // TODO: Migrate to core/ajax module?\n    class Ajax {\n\n        /**\n         * Send a request using AJAX, with method specified.\n         * @param {string} method Which HTTP method to use.\n         * @param {string} url Relative to root of jazzquiz module. Does not start with /.\n         * @param {Object} data Object with parameters as properties. Reserved: id, quizid, sessionid, attemptid, sesskey\n         * @param {function} success Callback function for when the request was completed successfully.\n         * @return {jqXHR} The jQuery XHR object\n         */\n        static request(method, url, data, success) {\n            data.id = session.courseModuleId;\n            data.sessionid = session.sessionId;\n            data.attemptid = session.attemptId;\n            data.sesskey = session.sessionKey;\n            return $.ajax({\n                type: method,\n                url: url,\n                data: data,\n                dataType: 'json',\n                success: success,\n                error: function (xhr, status, error) {\n                    //console.error('XHR Error: ' + error + '. Status: ' + status);\n                }\n            }).fail(() => setText(Quiz.info, 'error_with_request'));\n        }\n\n        /**\n         * Send a GET request using AJAX.\n         * @param {string} action Which action to query.\n         * @param {Object} data Object with parameters as properties. Reserved: id, quizid, sessionid, attemptid, sesskey\n         * @param {function} success Callback function for when the request was completed successfully.\n         * @return {jqXHR} The jQuery XHR object\n         */\n        static get(action, data, success) {\n            data.action = action;\n            return Ajax.request('get', 'ajax.php', data, success);\n        }\n\n        /**\n         * Send a POST request using AJAX.\n         * @param {string} action Which action to query.\n         * @param {Object} data Object with parameters as properties. Reserved: id, quizid, sessionid, attemptid, sesskey\n         * @param {function} success Callback function for when the request was completed successfully.\n         * @return {jqXHR} The jQuery XHR object\n         */\n        static post(action, data, success) {\n            data.action = action;\n            return Ajax.request('post', 'ajax.php', data, success);\n        }\n\n    }\n\n    class Question {\n\n        constructor(quiz) {\n            this.quiz = quiz;\n            this.isRunning = false;\n            this.isSaving = false;\n            this.endTime = 0;\n            this.isVoteRunning = false;\n            this.hasVotes = false;\n            this.countdownTimeLeft = 0;\n            this.questionTime = 0;\n            this.countdownInterval = 0;\n            this.timerInterval = 0;\n        }\n\n        static get box() {\n            return $('#jazzquiz_question_box');\n        }\n\n        static get timer() {\n            return $('#jazzquiz_question_timer');\n        }\n\n        static get form() {\n            return $('#jazzquiz_question_form');\n        }\n\n        /**\n         * Request the current question form.\n         */\n        refresh() {\n            Ajax.get('get_question_form', {}, data => {\n                if (data.is_already_submitted) {\n                    setText(Quiz.info, 'wait_for_instructor');\n                    return;\n                }\n                Quiz.show(Question.box.html(data.html));\n                eval(data.js);\n                data.css.forEach(cssUrl => {\n                    let head = document.getElementsByTagName('head')[0];\n                    let style = document.createElement('link');\n                    style.rel = 'stylesheet';\n                    style.type = 'text/css';\n                    style.href = cssUrl;\n                    head.appendChild(style);\n                });\n                this.quiz.role.onQuestionRefreshed(data);\n                Quiz.renderAllMathjax();\n            });\n        }\n\n        /**\n         * Hide the question \"ending in\" timer, and clears the interval.\n         */\n        hideTimer() {\n            Quiz.hide(Question.timer);\n            clearInterval(this.timerInterval);\n            this.timerInterval = 0;\n        }\n\n        /**\n         * Is called for every second of the question countdown.\n         * @param {number} questionTime in seconds\n         */\n        onCountdownTick(questionTime) {\n            this.countdownTimeLeft--;\n            if (this.countdownTimeLeft <= 0) {\n                clearInterval(this.countdownInterval);\n                this.countdownInterval = 0;\n                this.startAttempt(questionTime);\n            } else if (this.countdownTimeLeft !== 0) {\n                setText(Quiz.info, 'question_will_start_in_x_seconds', 'jazzquiz', this.countdownTimeLeft);\n            } else {\n                setText(Quiz.info, 'question_will_start_now');\n            }\n        }\n\n        /**\n         * Start a countdown for the question which will eventually start the question attempt.\n         * The question attempt might start before this function return, depending on the arguments.\n         * If a countdown has already been started, this call will return true and the current countdown will continue.\n         * @param {number} questionTime\n         * @param {number} countdownTimeLeft\n         * @return {boolean} true if countdown is active\n         */\n        startCountdown(questionTime, countdownTimeLeft) {\n            if (this.countdownInterval !== 0) {\n                return true;\n            }\n            questionTime = parseInt(questionTime);\n            countdownTimeLeft = parseInt(countdownTimeLeft);\n            this.countdownTimeLeft = countdownTimeLeft;\n            if (countdownTimeLeft < 1) {\n                // Check if the question has already ended.\n                if (questionTime > 0 && countdownTimeLeft < -questionTime) {\n                    return false;\n                }\n                // No need to start the countdown. Just start the question.\n                if (questionTime > 1) {\n                    this.startAttempt(questionTime + countdownTimeLeft);\n                } else {\n                    this.startAttempt(0);\n                }\n                return true;\n            }\n            this.countdownInterval = setInterval(() => this.onCountdownTick(questionTime), 1000);\n            return true;\n        }\n\n        /**\n         * When the question \"ending in\" timer reaches 0 seconds, this will be called.\n         */\n        onTimerEnding() {\n            this.isRunning = false;\n            this.quiz.role.onTimerEnding();\n        }\n\n        /**\n         * Is called for every second of the \"ending in\" timer.\n         */\n        onTimerTick() {\n            const currentTime = new Date().getTime();\n            if (currentTime > this.endTime) {\n                this.hideTimer();\n                this.onTimerEnding();\n            } else {\n                const timeLeft = parseInt((this.endTime - currentTime) / 1000);\n                this.quiz.role.onTimerTick(timeLeft);\n            }\n        }\n\n        /**\n         * Request the current question from the server.\n         * @param {number} questionTime\n         */\n        startAttempt(questionTime) {\n            Quiz.hide(Quiz.info);\n            this.refresh();\n            // Set this to true so that we don't keep calling this over and over.\n            this.isRunning = true;\n            questionTime = parseInt(questionTime);\n            if (questionTime === 0) {\n                // 0 means no timer.\n                return;\n            }\n            this.quiz.role.onTimerTick(questionTime); // TODO: Is it worth having this line?\n            this.endTime = new Date().getTime() + questionTime * 1000;\n            this.timerInterval = setInterval(() => this.onTimerTick(), 1000);\n        }\n\n        static isLoaded() {\n            return Question.box.html() !== '';\n        }\n\n    }\n\n    class Quiz {\n\n        constructor(Role) {\n            this.state = '';\n            this.isNewState = false;\n            this.question = new Question(this);\n            this.role = new Role(this);\n            this.events = {\n                notrunning: 'onNotRunning',\n                preparing: 'onPreparing',\n                running: 'onRunning',\n                reviewing: 'onReviewing',\n                sessionclosed: 'onSessionClosed',\n                voting: 'onVoting'\n            };\n        }\n\n        changeQuizState(state, data) {\n            this.isNewState = (this.state !== state);\n            this.state = state;\n            this.role.onStateChange(state);\n            const event = this.events[state];\n            this.role[event](data);\n        }\n\n        /**\n         * Initiate the chained session info calls to ajax.php\n         * @param {number} ms interval in milliseconds\n         */\n        poll(ms) {\n            Ajax.get('info', {}, data => {\n                this.changeQuizState(data.status, data);\n                setTimeout(() => this.poll(ms), ms);\n            });\n        }\n\n        static get main() {\n            return $('#jazzquiz');\n        }\n\n        static get info() {\n            return $('#jazzquiz_info_container');\n        }\n\n        static get responded() {\n            return $('#jazzquiz_responded_container');\n        }\n\n        static get responses() {\n            return $('#jazzquiz_responses_container');\n        }\n\n        static get responseInfo() {\n            return $('#jazzquiz_response_info_container');\n        }\n\n        static hide($element) {\n            $element.addClass('hidden');\n        }\n\n        static show($element) {\n            $element.removeClass('hidden');\n        }\n\n        static uncheck($element) {\n            $element.children('.fa').removeClass('fa-check-square-o').addClass('fa-square-o');\n        }\n\n        static check($element) {\n            $element.children('.fa').removeClass('fa-square-o').addClass('fa-check-square-o');\n        }\n\n        /**\n         * Triggers a dynamic content update event, which MathJax listens to.\n         */\n        static renderAllMathjax() {\n            mEvent.notifyFilterContentUpdated(document.getElementsByClassName('jazzquiz-response-container'));\n        }\n\n        /**\n         * Sets the body of the target, and triggers an event letting MathJax know about the element.\n         * @param {*} $target\n         * @param {string} latex\n         */\n        static addMathjaxElement($target, latex) {\n            $target.html('<span class=\"filter_mathjaxloader_equation\">' + latex + '</span>');\n            Quiz.renderAllMathjax();\n        }\n\n        /**\n         * Converts the input to LaTeX and renders it to the target with MathJax.\n         * @param {string} input\n         * @param {string} targetId\n         */\n        static renderMaximaEquation(input, targetId) {\n            const target = document.getElementById(targetId);\n            if (target === null) {\n                //console.error('Target element #' + targetId + ' not found.');\n                return;\n            }\n            if (cache[input] !== undefined) {\n                Quiz.addMathjaxElement($('#' + targetId), cache[input]);\n                return;\n            }\n            Ajax.get('stack', {input: encodeURIComponent(input)}, data => {\n                cache[data.original] = data.latex;\n                Quiz.addMathjaxElement($('#' + targetId), data.latex);\n            });\n        }\n\n    }\n\n    /**\n     * Retrieve a language string that was sent along with the page.\n     * @param $element\n     * @param {string} key Which string in the language file we want.\n     * @param {string} [from=jazzquiz] Which language file we want the string from. Default is jazzquiz.\n     * @param [args] This is {$a} in the string for the key.\n     */\n    function setText($element, key, from, args) {\n        from = (from !== undefined) ? from : 'jazzquiz';\n        args = (args !== undefined) ? args : [];\n        $.when(mString.get_string(key, from, args)).done(text => Quiz.show($element.html(text)));\n    }\n\n    return {\n        initialize: (courseModuleId, activityId, sessionId, attemptId, sessionKey) => {\n            session.courseModuleId = courseModuleId;\n            session.activityId = activityId;\n            session.sessionId = sessionId;\n            session.attemptId = attemptId;\n            session.sessionKey = sessionKey;\n        },\n        Quiz: Quiz,\n        Question: Question,\n        Ajax: Ajax,\n        setText: setText\n    };\n\n});\n"],"file":"core.min.js"}