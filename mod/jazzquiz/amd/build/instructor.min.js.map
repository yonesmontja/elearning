{"version":3,"sources":["../src/instructor.js"],"names":["define","$","Jazz","Quiz","Question","Ajax","setText","ResponseView","quiz","currentResponses","showVotesUponReview","respondedCount","showResponses","totalStudents","document","on","undoMerge","event","target","classList","contains","startMerge","id","parentNode","refresh","refreshVotes","responses","html","responseInfo","uncheck","Instructor","control","hide","check","show","removeClass","post","from","into","fromRowBarId","$barCell","$row","parent","hasClass","endMerge","$fromRow","merge","data","addClass","$table","find","each","$cells","attr","name","question","hasVotes","state","$showNormalResult","$showVoteResult","length","children","append","remove","targetId","graphId","rebuild","getElementById","total","highestResponseCount","i","count","parseInt","innerHTML","prune","rows","j","dataset","response","deleteRow","createControls","percent","rowIndex","currentRowIndex","row_i","row","insertRow","response_i","add","countHtml","responseCell","insertCell","onclick","toggleClass","barCell","latexId","addMathjaxElement","qtype","renderMaximaEquation","currentRow","containsOutside","countElement","barElement","firstElementChild","style","width","wrapperId","tableId","responded","questionType","a","b","trim","replace","exists","push","createBarGraph","sortBarGraph","get","has_votes","total_students","set","question_type","merge_count","answers","hasOwnProperty","attempt","finalcount","slot","isSorting","current","next","insertBefore","isShowingCorrectAnswer","totalQuestions","allowVote","keyCode","closeFullscreenView","closeQuestionListMenu","addEvents","repollQuestion","runVoting","showQuestionListSetup","nextQuestion","randomQuestion","endQuestion","showFullscreenView","showCorrectAnswer","toggle","closeSession","startQuiz","addHotkeys","student_count","side","info","enableControls","controlButtons","$studentsJoined","enabledButtons","questionTime","questiontime","isRunning","delay","isMerging","started","startCountdown","isLoaded","isNewState","correctAnswer","clear","css","voteable","timeLeft","timer","hideTimer","$controlButton","$menu","menuMargin","offset","left","questions","$questionButton","time","questionid","jazzquizquestionid","questionId","jazzQuestionId","jumpQuestion","options","getSelectedAnswersForVote","encodeURIComponent","JSON","stringify","method","jazzquizQuestionId","hideCorrectAnswer","startQuestion","box","controls","window","location","href","split","right_answer","renderAllMathjax","keys","key","action","repeat","ctrlKey","String","fromCharCode","which","toLowerCase","focusedTag","prop","preventDefault","$control","click","events","result","option","text","buttons","index","child","getAttribute","disabled","indexOf","main","documentElement","overflowY","menuId","menu","closest","fadeIn","fadeOut","initialize","reportView","slots","role","addReportEventHandlers","forEach","wrapper","num","table","graph","type","poll"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @package   mod_jazzquiz\n * @author    Sebastian S. Gundersen <sebastsg@stud.ntnu.no>\n * @copyright 2014 University of Wisconsin - Madison\n * @copyright 2018 NTNU\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'mod_jazzquiz/core'], function ($, Jazz) {\n\n    const Quiz = Jazz.Quiz;\n    const Question = Jazz.Question;\n    const Ajax = Jazz.Ajax;\n    const setText = Jazz.setText;\n\n    class ResponseView {\n\n        /**\n         * @param {Quiz} quiz\n         */\n        constructor(quiz) {\n            this.quiz = quiz;\n            this.currentResponses = [];\n            this.showVotesUponReview = false;\n            this.respondedCount = 0;\n            this.showResponses = false;\n            this.totalStudents = 0;\n            $(document).on('click', '#jazzquiz_undo_merge', () => this.undoMerge());\n            $(document).on('click', event => {\n                // Clicking a row to merge.\n                if (event.target.classList.contains('bar')) {\n                    this.startMerge(event.target.id);\n                } else if (event.target.parentNode && event.target.parentNode.classList.contains('bar')) {\n                    this.startMerge(event.target.parentNode.id);\n                }\n            });\n            $(document).on('click', '#review_show_normal_results', () => this.refresh(false));\n            $(document).on('click', '#review_show_vote_results', () => this.refreshVotes());\n        }\n\n        /**\n         * Clear, but not hide responses.\n         */\n        clear() {\n            Quiz.responses.html('');\n            Quiz.responseInfo.html('');\n        }\n\n        /**\n         * Hides the responses\n         */\n        hide() {\n            Quiz.uncheck(Instructor.control('responses'));\n            Quiz.hide(Quiz.responses);\n            Quiz.hide(Quiz.responseInfo);\n        }\n\n        /**\n         * Shows the responses\n         */\n        show() {\n            Quiz.check(Instructor.control('responses'));\n            Quiz.show(Quiz.responses);\n            Quiz.show(Quiz.responseInfo);\n            if (this.showVotesUponReview) {\n                this.refreshVotes();\n                this.showVotesUponReview = false;\n            } else {\n                this.refresh(false);\n            }\n        }\n\n        /**\n         * Toggle whether to show or hide the responses\n         */\n        toggle() {\n            this.showResponses = !this.showResponses;\n            if (this.showResponses) {\n                this.show();\n            } else {\n                this.hide();\n            }\n        }\n\n        /**\n         * End the response merge.\n         */\n        endMerge() {\n            $('.merge-into').removeClass('merge-into');\n            $('.merge-from').removeClass('merge-from');\n        }\n\n        /**\n         * Undo the last response merge.\n         */\n        undoMerge() {\n            Ajax.post('undo_merge', {}, () => this.refresh(true));\n        }\n\n        /**\n         * Merges responses based on response string.\n         * @param {string} from\n         * @param {string} into\n         */\n        merge(from, into) {\n            Ajax.post('merge_responses', {from: from, into: into}, () => this.refresh(false));\n        }\n\n        /**\n         * Start a merge between two responses.\n         * @param {string} fromRowBarId\n         */\n        startMerge(fromRowBarId) {\n            const $barCell = $('#' + fromRowBarId);\n            let $row = $barCell.parent();\n            if ($row.hasClass('merge-from')) {\n                this.endMerge();\n                return;\n            }\n            if ($row.hasClass('merge-into')) {\n                const $fromRow = $('.merge-from');\n                this.merge($fromRow.data('response'), $row.data('response'));\n                this.endMerge();\n                return;\n            }\n            $row.addClass('merge-from');\n            let $table = $row.parent().parent();\n            $table.find('tr').each(function () {\n                const $cells = $(this).find('td');\n                if ($cells[1].id !== $barCell.attr('id')) {\n                    $(this).addClass('merge-into');\n                }\n            });\n        }\n\n        /**\n         * Create controls to toggle between the responses of the actual question and the vote that followed.\n         * @param {string} name Can be either 'vote_response' or 'current_response'\n         */\n        createControls(name) {\n            if (!this.quiz.question.hasVotes) {\n                Quiz.hide(Quiz.responseInfo);\n                return;\n            }\n            // Add button for instructor to change what to review.\n            if (this.quiz.state === 'reviewing') {\n                let $showNormalResult = $('#review_show_normal_results');\n                let $showVoteResult = $('#review_show_vote_results');\n                Quiz.show(Quiz.responseInfo);\n                if (name === 'vote_response') {\n                    if ($showNormalResult.length === 0) {\n                        setText(Quiz.responseInfo.html('<h4 class=\"inline\"></h4>').children('h4'), 'showing_vote_results');\n                        Quiz.responseInfo.append('<button id=\"review_show_normal_results\" class=\"btn btn-primary\"></button><br>');\n                        setText($('#review_show_normal_results'), 'click_to_show_original_results');\n                        $showVoteResult.remove();\n                    }\n                } else if (name === 'current_response') {\n                    if ($showVoteResult.length === 0) {\n                        setText(Quiz.responseInfo.html('<h4 class=\"inline\"></h4>').children('h4'), 'showing_original_results');\n                        Quiz.responseInfo.append('<button id=\"review_show_vote_results\" class=\"btn btn-primary\"></button><br>');\n                        setText($('#review_show_vote_results'), 'click_to_show_vote_results');\n                        $showNormalResult.remove();\n                    }\n                }\n            }\n        }\n\n        /**\n         * Create a new and unsorted response bar graph.\n         * @param {Array.<Object>} responses\n         * @param {string} name\n         * @param {string} targetId\n         * @param {string} graphId\n         * @param {boolean} rebuild If the table should be completely rebuilt or not\n         */\n        createBarGraph(responses, name, targetId, graphId, rebuild) {\n            let target = document.getElementById(targetId);\n            if (target === null) {\n                return;\n            }\n            let total = 0;\n            let highestResponseCount = 0;\n            for (let i = 0; i < responses.length; i++) {\n                let count = parseInt(responses[i].count); // In case count is a string.\n                total += count;\n                if (count > highestResponseCount) {\n                    highestResponseCount = count;\n                }\n\n            }\n            if (total === 0) {\n                total = 1;\n            }\n\n            // Remove the rows if it should be rebuilt.\n            if (rebuild) {\n                target.innerHTML = '';\n            }\n\n            // Prune rows.\n            for (let i = 0; i < target.rows.length; i++) {\n                let prune = true;\n                for (let j = 0; j < responses.length; j++) {\n                    if (target.rows[i].dataset.response === responses[j].response) {\n                        prune = false;\n                        break;\n                    }\n                }\n                if (prune) {\n                    target.deleteRow(i);\n                    i--;\n                }\n            }\n\n            this.createControls(name);\n\n            name += graphId;\n\n            // Add rows.\n            for (let i = 0; i < responses.length; i++) {\n                //const percent = (parseInt(responses[i].count) / total) * 100;\n                const percent = (parseInt(responses[i].count) / highestResponseCount) * 100;\n\n                // Check if row with same response already exists.\n                let rowIndex = -1;\n                let currentRowIndex = -1;\n                for (let j = 0; j < target.rows.length; j++) {\n                    if (target.rows[j].dataset.response === responses[i].response) {\n                        rowIndex = target.rows[j].dataset.row_i;\n                        currentRowIndex = j;\n                        break;\n                    }\n                }\n\n                if (rowIndex === -1) {\n                    rowIndex = target.rows.length;\n                    let row = target.insertRow();\n                    row.dataset.response_i = i;\n                    row.dataset.response = responses[i].response;\n                    row.dataset.percent = percent;\n                    row.dataset.row_i = rowIndex;\n                    row.dataset.count = responses[i].count;\n                    row.classList.add('selected-vote-option');\n                    if (percent < 15) {\n                        row.classList.add('outside');\n                    }\n\n                    const countHtml = '<span id=\"' + name + '_count_' + rowIndex + '\">' + responses[i].count + '</span>';\n                    let responseCell = row.insertCell(0);\n                    responseCell.onclick = function () {\n                        $(this).parent().toggleClass('selected-vote-option');\n                    };\n\n                    let barCell = row.insertCell(1);\n                    barCell.classList.add('bar');\n                    barCell.id = name + '_bar_' + rowIndex;\n                    barCell.innerHTML = '<div style=\"width:' + percent + '%;\">' + countHtml + '</div>';\n\n                    const latexId = name + '_latex_' + rowIndex;\n                    responseCell.innerHTML = '<span id=\"' + latexId + '\"></span>';\n                    Quiz.addMathjaxElement($('#' + latexId), responses[i].response);\n                    if (responses[i].qtype === 'stack') {\n                        Quiz.renderMaximaEquation(responses[i].response, latexId);\n                    }\n                } else {\n                    let currentRow = target.rows[currentRowIndex];\n                    currentRow.dataset.row_i = rowIndex;\n                    currentRow.dataset.response_i = i;\n                    currentRow.dataset.percent = percent;\n                    currentRow.dataset.count = responses[i].count;\n                    const containsOutside = currentRow.classList.contains('outside');\n                    if (percent > 15 && containsOutside) {\n                        currentRow.classList.remove('outside');\n                    } else if (percent < 15 && !containsOutside) {\n                        currentRow.classList.add('outside');\n                    }\n                    let countElement = document.getElementById(name + '_count_' + rowIndex);\n                    if (countElement !== null) {\n                        countElement.innerHTML = responses[i].count;\n                    }\n                    let barElement = document.getElementById(name + '_bar_' + rowIndex);\n                    if (barElement !== null) {\n                        barElement.firstElementChild.style.width = percent + '%';\n                    }\n                }\n            }\n        };\n\n        /**\n         * Sort the responses in the graph by how many had the same response.\n         * @param {string} targetId\n         */\n        static sortBarGraph(targetId) {\n            let target = document.getElementById(targetId);\n            if (target === null) {\n                return;\n            }\n            let isSorting = true;\n            while (isSorting) {\n                isSorting = false;\n                for (let i = 0; i < (target.rows.length - 1); i++) {\n                    const current = parseInt(target.rows[i].dataset.percent);\n                    const next = parseInt(target.rows[i + 1].dataset.percent);\n                    if (current < next) {\n                        target.rows[i].parentNode.insertBefore(target.rows[i + 1], target.rows[i]);\n                        isSorting = true;\n                        break;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Create and sort a bar graph based on the responses passed.\n         * @param {string} wrapperId\n         * @param {string} tableId\n         * @param {Array.<Object>} responses\n         * @param {number|undefined} responded How many students responded to the question\n         * @param {string} questionType\n         * @param {string} graphId\n         * @param {boolean} rebuild If the graph should be rebuilt or not.\n         */\n        set(wrapperId, tableId, responses, responded, questionType, graphId, rebuild) {\n            if (responses === undefined) {\n                return;\n            }\n\n            // Check if any responses to show.\n            if (responses.length === 0) {\n                Quiz.show(Quiz.responded);\n                setText(Quiz.responded.find('h4'), 'a_out_of_b_responded', 'jazzquiz', {\n                    a: 0,\n                    b: this.totalStudents\n                });\n                return;\n            }\n\n            // Question type specific.\n            switch (questionType) {\n                case 'shortanswer':\n                    for (let i = 0; i < responses.length; i++) {\n                        responses[i].response = responses[i].response.trim();\n                    }\n                    break;\n                case 'stack':\n                    // Remove all spaces from responses.\n                    for (let i = 0; i < responses.length; i++) {\n                        responses[i].response = responses[i].response.replace(/\\s/g, '');\n                    }\n                    break;\n                default:\n                    break;\n            }\n\n            // Update data.\n            this.currentResponses = [];\n            this.respondedCount = 0;\n            for (let i = 0; i < responses.length; i++) {\n                let exists = false;\n                let count = 1;\n                if (responses[i].count !== undefined) {\n                    count = parseInt(responses[i].count);\n                }\n                this.respondedCount += count;\n                // Check if response is a duplicate.\n                for (let j = 0; j < this.currentResponses.length; j++) {\n                    if (this.currentResponses[j].response === responses[i].response) {\n                        this.currentResponses[j].count += count;\n                        exists = true;\n                        break;\n                    }\n                }\n                // Add element if not a duplicate.\n                if (!exists) {\n                    this.currentResponses.push({\n                        response: responses[i].response,\n                        count: count,\n                        qtype: questionType\n                    });\n                }\n            }\n\n            // Update responded container.\n            if (Quiz.responded.length !== 0 && responded !== undefined) {\n                Quiz.show(Quiz.responded);\n                setText(Quiz.responded.find('h4'), 'a_out_of_b_responded', 'jazzquiz', {\n                    a: responded,\n                    b: this.totalStudents\n                });\n            }\n\n            // Should we show the responses?\n            if (!this.showResponses && this.quiz.state !== 'reviewing') {\n                Quiz.hide(Quiz.responseInfo);\n                Quiz.hide(Quiz.responses);\n                return;\n            }\n\n            if (document.getElementById(tableId) === null) {\n                const html = '<table id=\"' + tableId + '\" class=\"jazzquiz-responses-overview\"></table>';\n                Quiz.show($('#' + wrapperId).html(html));\n            }\n            this.createBarGraph(this.currentResponses, 'current_response', tableId, graphId, rebuild);\n            ResponseView.sortBarGraph(tableId);\n        }\n\n        /**\n         * Fetch and show results for the ongoing or previous question.\n         * @param {boolean} rebuild If the response graph should be rebuilt or not.\n         */\n        refresh(rebuild) {\n            Ajax.get('get_results', {}, data => {\n                this.quiz.question.hasVotes = data.has_votes;\n                this.totalStudents = parseInt(data.total_students);\n\n                this.set('jazzquiz_responses_container', 'current_responses_wrapper',\n                    data.responses, data.responded, data.question_type, 'results', rebuild);\n\n                if (data.merge_count > 0) {\n                    Quiz.show($('#jazzquiz_undo_merge'));\n                } else {\n                    Quiz.hide($('#jazzquiz_undo_merge'));\n                }\n            });\n        }\n\n        /**\n         * refresh() equivalent for votes.\n         */\n        refreshVotes() {\n            // Should we show the results?\n            if (!this.showResponses && this.quiz.state !== 'reviewing') {\n                Quiz.hide(Quiz.responseInfo);\n                Quiz.hide(Quiz.responses);\n                return;\n            }\n            Ajax.get('get_vote_results', {}, data => {\n                const answers = data.answers;\n                const targetId = 'wrapper_vote_responses';\n                let responses = [];\n\n                this.respondedCount = 0;\n                this.totalStudents = parseInt(data.total_students);\n\n                for (let i in answers) {\n                    if (!answers.hasOwnProperty(i)) {\n                        continue;\n                    }\n                    responses.push({\n                        response: answers[i].attempt,\n                        count: answers[i].finalcount,\n                        qtype: answers[i].qtype,\n                        slot: answers[i].slot\n                    });\n                    this.respondedCount += parseInt(answers[i].finalcount);\n                }\n\n                setText(Quiz.responded.find('h4'), 'a_out_of_b_voted', 'jazzquiz', {\n                    a: this.respondedCount,\n                    b: this.totalStudents\n                });\n\n                if (document.getElementById(targetId) === null) {\n                    const html = '<table id=\"' + targetId + '\" class=\"jazzquiz-responses-overview\"></table>';\n                    Quiz.show(Quiz.responses.html(html));\n                }\n\n                this.createBarGraph(responses, 'vote_response', targetId, 'vote', false);\n                ResponseView.sortBarGraph(targetId);\n            });\n        }\n\n    }\n\n    class Instructor {\n\n        /**\n         * @param {Quiz} quiz\n         */\n        constructor(quiz) {\n            this.quiz = quiz;\n            this.responses = new ResponseView(quiz);\n            this.isShowingCorrectAnswer = false;\n            this.totalQuestions = 0;\n            this.allowVote = false;\n\n            $(document).on('keyup', event => {\n                if (event.keyCode === 27) { // Escape key.\n                    Instructor.closeFullscreenView();\n                }\n            });\n\n            $(document).on('click', event => {\n                Instructor.closeQuestionListMenu(event, 'improvise');\n                Instructor.closeQuestionListMenu(event, 'jump');\n            });\n\n            Instructor.addEvents({\n                'repoll': () => this.repollQuestion(),\n                'vote': () => this.runVoting(),\n                'improvise': () => this.showQuestionListSetup('improvise'),\n                'jump': () => this.showQuestionListSetup('jump'),\n                'next': () => this.nextQuestion(),\n                'random': () => this.randomQuestion(),\n                'end': () => this.endQuestion(),\n                'fullscreen': () => Instructor.showFullscreenView(),\n                'answer': () => this.showCorrectAnswer(),\n                'responses': () => this.responses.toggle(),\n                'exit': () => this.closeSession(),\n                'quit': () => this.closeSession(),\n                'startquiz': () => this.startQuiz()\n            });\n\n            Instructor.addHotkeys({\n                't': 'responses',\n                'r': 'repoll',\n                'a': 'answer',\n                'e': 'end',\n                'j': 'jump',\n                'i': 'improvise',\n                'v': 'vote',\n                'n': 'next',\n                'm': 'random',\n                'f': 'fullscreen'\n            });\n        }\n\n        static addHotkeys(keys) {\n            for (let key in keys) {\n                if (keys.hasOwnProperty(key)) {\n                    keys[key] = {\n                        action: keys[key],\n                        repeat: false // TODO: Maybe event.repeat becomes more standard?\n                    };\n                    $(document).on('keydown', event => {\n                        if (keys[key].repeat || event.ctrlKey) {\n                            return;\n                        }\n                        if (String.fromCharCode(event.which).toLowerCase() !== key) {\n                            return;\n                        }\n                        let focusedTag = $(':focus').prop('tagName');\n                        if (focusedTag !== undefined) {\n                            focusedTag = focusedTag.toLowerCase();\n                            if (focusedTag === 'input' || focusedTag === 'textarea') {\n                                return;\n                            }\n                        }\n                        event.preventDefault();\n                        keys[key].repeat = true;\n                        let $control = Instructor.control(keys[key].action);\n                        if ($control.length && !$control.prop('disabled')) {\n                            $control.click();\n                        }\n                    });\n                    $(document).on('keyup', event => {\n                        if (String.fromCharCode(event.which).toLowerCase() === key) {\n                            keys[key].repeat = false;\n                        }\n                    });\n                }\n            }\n        }\n\n        static addEvents(events) {\n            for (let key in events) {\n                if (events.hasOwnProperty(key)) {\n                    $(document).on('click', '#jazzquiz_control_' + key, () => {\n                        Instructor.enableControls([]);\n                        events[key]();\n                    });\n                }\n            }\n        }\n\n        static get controls() {\n            return $('#jazzquiz_controls_box');\n        }\n\n        static get controlButtons() {\n            return Instructor.controls.find('.quiz-control-buttons');\n        }\n\n        static control(key) {\n            return $('#jazzquiz_control_' + key);\n        }\n\n        static get side() {\n            return $('#jazzquiz_side_container');\n        }\n\n        static get correctAnswer() {\n            return $('#jazzquiz_correct_answer_container');\n        }\n\n        static get isMerging() {\n            return $('.merge-from').length !== 0;\n        }\n\n        onNotRunning(data) {\n            this.responses.totalStudents = data.student_count;\n            Quiz.hide(Instructor.side);\n            setText(Quiz.info, 'instructions_for_instructor');\n            Instructor.enableControls([]);\n            Quiz.hide(Instructor.controlButtons);\n            let $studentsJoined = Instructor.control('startquiz').next();\n            if (data.student_count === 1) {\n                setText($studentsJoined, 'one_student_has_joined');\n            } else if (data.student_count > 1) {\n                setText($studentsJoined, 'x_students_have_joined', 'jazzquiz', data.student_count);\n            } else {\n                setText($studentsJoined, 'no_students_have_joined');\n            }\n            Quiz.show(Instructor.control('startquiz').parent());\n        }\n\n        onPreparing(data) {\n            Quiz.hide(Instructor.side);\n            setText(Quiz.info, 'instructions_for_instructor');\n            let enabledButtons = ['improvise', 'jump', 'random', 'fullscreen', 'quit'];\n            if (data.slot < this.totalQuestions) {\n                enabledButtons.push('next');\n            }\n            Instructor.enableControls(enabledButtons);\n        }\n\n        onRunning(data) {\n            if (!this.responses.showResponses) {\n                this.responses.hide();\n            }\n            Quiz.show(Instructor.side);\n            Instructor.enableControls(['end', 'responses', 'fullscreen']);\n            this.quiz.question.questionTime = data.questiontime;\n            if (this.quiz.question.isRunning) {\n                // Check if the question has already ended.\n                // We need to do this because the state does not update unless an instructor is connected.\n                if (data.questionTime > 0 && data.delay < -data.questiontime) {\n                    this.endQuestion();\n                }\n                // Only rebuild results if we are not merging.\n                this.responses.refresh(!Instructor.isMerging);\n            } else {\n                const started = this.quiz.question.startCountdown(data.questiontime, data.delay);\n                if (started) {\n                    this.quiz.question.isRunning = true;\n                }\n            }\n        }\n\n        onReviewing(data) {\n            Quiz.show(Instructor.side);\n            let enabledButtons = ['answer', 'repoll', 'fullscreen', 'improvise', 'jump', 'random', 'quit'];\n            if (this.allowVote) {\n                enabledButtons.push('vote');\n            }\n            if (data.slot < this.totalQuestions) {\n                enabledButtons.push('next');\n            }\n            Instructor.enableControls(enabledButtons);\n\n            // In case page was refreshed, we should ensure the question is showing.\n            if (!Question.isLoaded()) {\n                this.quiz.question.refresh();\n            }\n\n            // For now, just always show responses while reviewing.\n            // In the future, there should be an additional toggle.\n            if (this.quiz.isNewState) {\n                this.responses.show();\n            }\n            // No longer in question.\n            this.quiz.question.isRunning = false;\n        }\n\n        onSessionClosed(data) {\n            Quiz.hide(Instructor.side);\n            Quiz.hide(Instructor.correctAnswer);\n            Instructor.enableControls([]);\n            this.responses.clear();\n            this.quiz.question.isRunning = false;\n        }\n\n        onVoting(data) {\n            if (!this.responses.showResponses) {\n                this.responses.hide();\n            }\n            Quiz.show(Instructor.side);\n            Instructor.enableControls(['quit', 'fullscreen', 'answer', 'responses', 'end']);\n            this.responses.refreshVotes();\n        }\n\n        onStateChange(state) {\n            $('#region-main').find('ul.nav.nav-tabs').css('display', 'none');\n            $('#region-main-settings-menu').css('display', 'none');\n            $('.region_main_settings_menu_proxy').css('display', 'none');\n            Quiz.show(Instructor.controlButtons);\n            Quiz.hide(Instructor.control('startquiz').parent());\n        }\n\n        onQuestionRefreshed(data) {\n            this.allowVote = data.voteable;\n        }\n\n        onTimerEnding() {\n            this.endQuestion();\n        }\n\n        onTimerTick(timeLeft) {\n            setText(Question.timer, 'x_seconds_left', 'jazzquiz', timeLeft);\n        }\n\n        /**\n         * Start the quiz. Does not start any questions.\n         */\n        startQuiz() {\n            Quiz.hide(Instructor.control('startquiz').parent());\n            Ajax.post('start_quiz', {}, () => $('#jazzquiz_controls').removeClass('btn-hide'));\n        }\n\n        /**\n         * End the currently ongoing question or vote.\n         */\n        endQuestion() {\n            this.quiz.question.hideTimer();\n            Ajax.post('end_question', {}, () => {\n                if (this.quiz.state === 'voting') {\n                    this.responses.showVotesUponReview = true;\n                } else {\n                    this.quiz.question.isRunning = false;\n                    Instructor.enableControls([]);\n                }\n            });\n        }\n\n        /**\n         * Show a question list dropdown.\n         * @param {string} name\n         */\n        showQuestionListSetup(name) {\n            let $controlButton = Instructor.control(name);\n            if ($controlButton.hasClass('active')) {\n                // It's already open. Let's not send another request.\n                return;\n            }\n            Ajax.get('list_' + name + '_questions', {}, data => {\n                let self = this;\n                let $menu = $('#jazzquiz_' + name + '_menu');\n                const menuMargin = $controlButton.offset().left - $controlButton.parent().offset().left;\n                $menu.html('').addClass('active').css('margin-left', menuMargin + 'px');\n                $controlButton.addClass('active');\n                const questions = data.questions;\n                for (let i in questions) {\n                    if (!questions.hasOwnProperty(i)) {\n                        continue;\n                    }\n                    let $questionButton = $('<button class=\"btn\"></button>');\n                    Quiz.addMathjaxElement($questionButton, questions[i].name);\n                    $questionButton.data({\n                        'time': questions[i].time,\n                        'question-id': questions[i].questionid,\n                        'jazzquiz-question-id': questions[i].jazzquizquestionid\n                    });\n                    $questionButton.data('test', 1);\n                    $questionButton.on('click', function () {\n                        const questionId = $(this).data('question-id');\n                        const time = $(this).data('time');\n                        const jazzQuestionId = $(this).data('jazzquiz-question-id');\n                        self.jumpQuestion(questionId, time, jazzQuestionId);\n                        $menu.html('').removeClass('active');\n                        $controlButton.removeClass('active');\n                    });\n                    $menu.append($questionButton);\n                }\n            });\n        }\n\n        /**\n         * Get the selected responses.\n         * @returns {Array.<Object>} Vote options\n         */\n        static getSelectedAnswersForVote() {\n            let result = [];\n            $('.selected-vote-option').each((i, option) => {\n                result.push({\n                    text: option.dataset.response,\n                    count: option.dataset.count\n                });\n            });\n            return result;\n        }\n\n        /**\n         * Start a vote with the responses that are currently selected.\n         */\n        runVoting() {\n            const options = Instructor.getSelectedAnswersForVote();\n            const data = {questions: encodeURIComponent(JSON.stringify(options))};\n            Ajax.post('run_voting', data, () => {});\n        }\n\n        /**\n         * Start a new question in this session.\n         * @param {string} method\n         * @param {number} questionId\n         * @param {number} questionTime\n         * @param {number} jazzquizQuestionId\n         */\n        startQuestion(method, questionId, questionTime, jazzquizQuestionId) {\n            Quiz.hide(Quiz.info);\n            this.responses.clear();\n            this.hideCorrectAnswer();\n            Ajax.post('start_question', {\n                method: method,\n                questionid: questionId,\n                questiontime: questionTime,\n                jazzquizquestionid: jazzquizQuestionId\n            }, data => this.quiz.question.startCountdown(data.questiontime, data.delay));\n        }\n\n        /**\n         * Jump to a planned question in the quiz.\n         * @param {number} questionId\n         * @param {number} questionTime\n         * @param {number} jazzquizQuestionId\n         */\n        jumpQuestion(questionId, questionTime, jazzquizQuestionId) {\n            this.startQuestion('jump', questionId, questionTime, jazzquizQuestionId);\n        }\n\n        /**\n         * Repoll the previously asked question.\n         */\n        repollQuestion() {\n            this.startQuestion('repoll', 0, 0, 0);\n        }\n\n        /**\n         * Continue on to the next preplanned question.\n         */\n        nextQuestion() {\n            this.startQuestion('next', 0, 0, 0);\n        }\n\n        /**\n         * Start a random question.\n         */\n        randomQuestion() {\n            this.startQuestion('random', 0, 0, 0);\n        }\n\n        /**\n         * Close the current session.\n         */\n        closeSession() {\n            Quiz.hide($('#jazzquiz_undo_merge'));\n            Quiz.hide(Question.box);\n            Quiz.hide(Instructor.controls);\n            setText(Quiz.info, 'closing_session');\n            Ajax.post('close_session', {}, () => window.location = location.href.split('&')[0]);\n        }\n\n        /**\n         * Hide the correct answer if showing.\n         */\n        hideCorrectAnswer() {\n            if (this.isShowingCorrectAnswer) {\n                Quiz.hide(Instructor.correctAnswer);\n                Quiz.uncheck(Instructor.control('answer'));\n                this.isShowingCorrectAnswer = false;\n            }\n        }\n\n        /**\n         * Request and show the correct answer for the ongoing or previous question.\n         */\n        showCorrectAnswer() {\n            this.hideCorrectAnswer();\n            Ajax.get('get_right_response', {}, data => {\n                Quiz.show(Instructor.correctAnswer.html(data.right_answer));\n                Quiz.renderAllMathjax();\n                Quiz.check(Instructor.control('answer'));\n                this.isShowingCorrectAnswer = true;\n            });\n        }\n\n        /**\n         * Enables all buttons passed in arguments, but disables all others.\n         * @param {Array.<string>} buttons The unique part of the IDs of the buttons to be enabled.\n         */\n        static enableControls(buttons) {\n            Instructor.controlButtons.children('button').each((index, child) => {\n                const id = child.getAttribute('id').replace('jazzquiz_control_', '');\n                child.disabled = (buttons.indexOf(id) === -1);\n            });\n        }\n\n        /**\n         * Enter fullscreen mode for better use with projectors.\n         */\n        static showFullscreenView() {\n            if (Quiz.main.hasClass('jazzquiz-fullscreen')) {\n                Instructor.closeFullscreenView();\n                return;\n            }\n            // Hide the scrollbar - remember to always set back to auto when closing.\n            document.documentElement.style.overflowY = 'hidden';\n            // Sets the quiz view to an absolute position that covers the viewport.\n            Quiz.main.addClass('jazzquiz-fullscreen');\n        }\n\n        /**\n         * Exit the fullscreen mode.\n         */\n        static closeFullscreenView() {\n            document.documentElement.style.overflowY = 'auto';\n            Quiz.main.removeClass('jazzquiz-fullscreen');\n        }\n\n        /**\n         * Close the dropdown menu for choosing a question.\n         * @param {Event} event\n         * @param {string} name\n         */\n        static closeQuestionListMenu(event, name) {\n            const menuId = '#jazzquiz_' + name + '_menu';\n            // Close the menu if the click was not inside.\n            const menu = $(event.target).closest(menuId);\n            if (!menu.length) {\n                $(menuId).html('').removeClass('active');\n                Instructor.control(name).removeClass('active');\n            }\n        }\n\n        static addReportEventHandlers() {\n            $(document).on('click', '#report_overview_controls button', function () {\n                const action = $(this).data('action');\n                if (action === 'attendance') {\n                    $('#report_overview_responded').fadeIn();\n                    $('#report_overview_responses').fadeOut();\n                } else if (action === 'responses') {\n                    $('#report_overview_responses').fadeIn();\n                    $('#report_overview_responded').fadeOut();\n                }\n            });\n        }\n\n    }\n\n    return {\n        initialize: function (totalQuestions, reportView, slots) {\n            let quiz = new Quiz(Instructor);\n            quiz.role.totalQuestions = totalQuestions;\n            if (reportView) {\n                Instructor.addReportEventHandlers();\n                quiz.role.responses.showResponses = true;\n                slots.forEach(slot => {\n                    const wrapper = 'jazzquiz_wrapper_responses_' + slot.num;\n                    const table = 'responses_wrapper_table_' + slot.num;\n                    const graph = 'report_' + slot.num;\n                    quiz.role.responses.set(wrapper, table, slot.responses, undefined, slot.type, graph, false);\n                });\n            } else {\n                quiz.poll(500);\n            }\n        }\n    }\n\n});\n"],"file":"instructor.min.js"}