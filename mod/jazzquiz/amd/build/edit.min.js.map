{"version":3,"sources":["../src/edit.js"],"names":["define","$","submitQuestionOrder","order","courseModuleId","post","id","action","JSON","stringify","location","reload","getQuestionOrder","each","push","data","offsetQuestion","questionId","offset","originalIndex","indexOf","i","length","listenAddToQuiz","on","$checkboxes","questionIds","checkbox","getAttribute","slice","questionids","initialize","index","splice","questionList","document","getElementsByClassName","Sortable","create","handle","onSort"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @package    mod_jazzquiz\n * @author     Sebastian S. Gundersen <sebastsg@stud.ntnu.no>\n * @copyright  2015 University of Wisconsin - Madison\n * @copyright  2018 NTNU\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery'], function ($) {\n\n    /**\n     * Submit the question order to the server. An empty array will delete all questions.\n     * @param {Array.<number>} order\n     * @param {number} courseModuleId\n     */\n    function submitQuestionOrder(order, courseModuleId) {\n        $.post('edit.php', {\n            id: courseModuleId,\n            action: 'order',\n            order: JSON.stringify(order)\n        }, () => location.reload()); // TODO: Correct locally instead, but for now just refresh.\n    }\n\n    /**\n     * @returns {Array} The current question order.\n     */\n    function getQuestionOrder() {\n        let order = [];\n        $('.questionlist li').each(function () {\n            order.push($(this).data('question-id'));\n        });\n        return order;\n    }\n\n    /**\n     * Move a question up or down by a specified offset.\n     * @param {number} questionId\n     * @param {number} offset Negative to move down, positive to move up\n     * @returns {Array}\n     */\n    function offsetQuestion(questionId, offset) {\n        let order = getQuestionOrder();\n        let originalIndex = order.indexOf(questionId);\n        if (originalIndex === -1) {\n            return order;\n        }\n        for (let i = 0; i < order.length; i++) {\n            if (i + offset === originalIndex) {\n                order[originalIndex] = order[i];\n                order[i] = questionId;\n                break;\n            }\n        }\n        return order;\n    }\n\n    function listenAddToQuiz(courseModuleId) {\n        $('.jazzquiz-add-selected-questions').on('click', function () {\n            const $checkboxes = $('#categoryquestions td input[type=checkbox]:checked');\n            let questionIds = '';\n            for (const checkbox of $checkboxes) {\n                questionIds += checkbox.getAttribute('name').slice(1) + ',';\n            }\n            $.post('edit.php', {\n                id: courseModuleId,\n                action: 'addquestion',\n                questionids: questionIds,\n            }, () => location.reload());\n        });\n    }\n\n    return {\n        initialize: courseModuleId => {\n            $('.edit-question-action').on('click', function () {\n                const action = $(this).data('action');\n                const questionId = $(this).data('question-id');\n                let order = [];\n                switch (action) {\n                    case 'up':\n                        order = offsetQuestion(questionId, 1);\n                        break;\n                    case 'down':\n                        order = offsetQuestion(questionId, -1);\n                        break;\n                    case 'delete':\n                        order = getQuestionOrder();\n                        const index = order.indexOf(questionId);\n                        if (index !== -1) {\n                            order.splice(index, 1);\n                        }\n                        break;\n                    default:\n                        return;\n                }\n                submitQuestionOrder(order, courseModuleId);\n            });\n            let questionList = document.getElementsByClassName('questionlist')[0];\n            Sortable.create(questionList, {\n                handle: '.dragquestion',\n                onSort: () => submitQuestionOrder(getQuestionOrder(), courseModuleId)\n            });\n            listenAddToQuiz(courseModuleId);\n        }\n    };\n\n});\n"],"file":"edit.min.js"}